
/* 这是一个简单描述Blocks指令脚本的语法的文档
 * Blocks指令脚本(以下简称脚本)是一种强类型的解释型编程语言
 * 默认存放在/sdcard/Blocks/script.txt
 * 主要设计目的是在游戏运行时可以方便地调用游戏的java实现中的各种类、方法(不受到java的访问控制修饰符的影响),以便进行调试、测试和扩展
 * 
 * // 单行注释 忽略//开始到本行结束的所有内容
 * /* */ 多行注释 忽略从/*开始,到*/结束的内容 多行注释允许像括号一样嵌套,多行注释内单行注释仍有效
 * 
 * 一个合法的脚本文件在执行前,会忽略注释并在前后加上(),此时得到一个可执行列表,这个可执行列表将被求值
 * 
 * true,false,null为关键字,表示常量,true和false被自动指明类型为boolean,null没有自动指明的类型
 * 十进制整数表示int常量,十进制浮点数表示double常量
 * "字符串" 表示java.lang.String常量
 * 字符串中\\表示\,\n表示换行,\“表示"
 * 字符串中也允许直接换行
 * \后紧跟换行表示忽略这个换行符
 * 
 * 变量的作用域从声明位置开始,到声明位置所在的可执行列表末尾结束
 * 使用变量的值时,对于同名定义,选取文件中定义位置最靠后的一个
 * 变量的类型是声明时赋值的类型
 * 
 * 
 * 
 * a.b 成员运算符 用于调用成员变量/方法
 * 
 * a:A 类型转换运算符 用于指明对象a的类型A
 * 表达式的值是a转换为A的值
 * 
 * +  -  *  /  %
 * a+b a-b a*b a/b a%b 加 减 乘 除 取模 这些运算也支持对应的赋值运算+= -= *= /= %=
 * +a -a 正号 负号
 * 算术运算符,a,b必须是byte,short,int,long,float,double类型或对应的对象类型
 * a+b较为特殊,如果a和b中至少有一个声明或自动确定为字符串类型,则执行字符串连接操作,表达式的值为字符串连接的结果
 * a,b类型不同时,精度较低的类型转为精度较高的类型
 * 表达式的值为运算结果,类型自动指明为a,b中精度较高的类型
 *
 * <  >  <=  >=
 * a<b  a>b  a<=b  a>=b  数值比较运算符,表达式的值为boolean类型
 * a和b必须是byte,short,int,long,float,double类型或对应的对象类型
 * 
 * == != is instanceof 相等判断运算符,表达式的值为boolean类型
 * a==b 对应java的a.equals(b)
 * a!=b 对应java的!a.equals(b)
 * a is b 判断a和b是否指向同一个对象
 * a instanceof b 判断表达式a的值是否是类型b的实例
 * 
 * a&&b 逻辑与,先计算a,若a为true则表达式的值为b,否则不计算b,表达式的值为a
 * a||b 逻辑或,先计算a,若a为false则表达式的值为b,否则不计算b,表达式的值为a
 * !a 逻辑非,表达式的值与a相反
 * a,b的值应为boolean类型
 * 表达式的值为boolean类型
 * 
 * a=b 赋值运算符
 * a是某个已定义的变量,或是一个形如Type.field或value.field的表达式
 * 右结合,表达式的值为b
 * 
 * a:=b 定义运算符 声明变量a,初始化为b,右结合,表达式的值为b
 * 
 * a,b 逗号运算符 a逗号列表或表达式,b是表达式,则连接a,b得到一个逗号列表,逗号列表先执行a后执行b,表达式的值为b
 * 在不引发歧义时,逗号可以被省略
 * 
 * () 运算符 用于将括号内的逗号列表/表达式转成一个可执行列表
 * 括号内部可以为空(无参数),只有一个表达式(一个参数),或是一个逗号列表(至少两个参数)
 * 如果()中最后面有一个多余的逗号,会被忽略
 * 
 * [] 数组访问运算符
 * A[] 表示类型A对应的数组类型
 * a[b] 表示数组a的下标b对应的元素
 * A[非空逗号列表] 表示创建一个A类型多维数组,长度为逗号列表的长度
 * 数组类型拥有一个接受任意个数参数的构造函数,用法和构造函数相同
 * 数组类型拥有一个int型成员常量length,表示数组长度
 * 
 * while a  条件循环运算符,a必须为boolean,表达式的值为void,重复对a进行求值直到其值变为false
 * for(a,b,c)  条件循环运算符,表达式的值为void,执行一次a,之后重复对b,c进行求值,直到b变为false
 * for(a,b,c,d)  条件循环运算符,表达式的值为void,执行一次a,之后重复对b,d,c进行求值,直到b变为false
 * try a  异常捕获运算符,表达式的值为java.lang.Exception类型,如果未出现异常则得到null
 * throw a  异常抛出运算符,a为java.lang.Exception类型,抛出一个异常
 * 如果捕获异常,则表达式的值为相应的Exception对象,否则为null
 * 
 * 类型需要完整声明包名和类名,除了以下自动导入的包可以直接写类名:
 * 如果一个类名在多个导入的包中存在,则必须写完整路径
 * game.block,
 *		game.item,
 *		game.entity,
 *		game.world,
 *		game.ui,
 *		java.lang,
 *		java.util,
 * 
 * Type.field 查询Type类或其父类的名为field的静态成员
 * value.field 查询value的名为field的成员,value不能为null
 * Type(a,b,c) 严格指定参数列表的类型,调用Type类的对应构造方法,得到一个Type类对象
 * Type.method(a,b,c) 严格指定参数列表的类型,调用Type类或其父类的静态方法method
 * value.method(a,b,c) 严格指定参数列表的类型,调用方法,根据value的类型进行多态
 */
 
 